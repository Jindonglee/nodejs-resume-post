generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId        String         @id @default(uuid()) @map("userId")
  kakaoId       Int?        
  name          String         @map("name")
  email         String         @unique @map("email")
  password      String?         @map("password")
  createdAt     DateTime       @default(now()) @map("createdAt")
  updatedAt     DateTime       @updatedAt @map("updatedAt")
  grade         String         @default("user") @map("grade")
  refreshTokens RefreshToken[]
  resume        Resume[]

  @@map("Users")
}

model Resume {
  resumeId  String   @id @default(uuid()) @map("resumeId")
  userId    String   @map("userId")
  title     String   @map("title")
  content   String?  @map("content") @db.Text
  status    Status   @default(APPLY) @map("status")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  user      Users    @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([userId], map: "Resume_userId_fkey")
  @@map("Resume")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(512)
  userId    String   @map("userId")
  ip        String?
  userAgent String?  @map("userAgent")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  User      Users    @relation(fields: [userId], references: [userId])

  @@index([userId], map: "RefreshToken_userId_fkey")
  @@map("RefreshToken")
}

enum Status {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
